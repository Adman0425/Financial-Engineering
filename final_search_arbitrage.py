# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1e19Weo9-pzi8kR7Q6n9mS_95IXGcL3kJ
"""

import math

# Input the data
x = float(input("Please enter the strike_price:"))
index_bid = float(input("Please enter the index_bid:"))
index_ask = float(input("Please enter the index_ask:"))
futures_bid = float(input("Please enter the futures_bid:"))
futures_ask = float(input("Please enter the futures_ask:"))
call_bid = float(input("Please enter the call_bid:"))
call_ask = float(input("Please enter the call_ask:"))
put_bid = float(input("Please enter the put_bid:"))
put_ask = float(input("Please enter the put_ask:"))

def check_arbitrage(x, index_bid, index_ask, futures_bid, futures_ask, call_bid, call_ask, put_bid, put_ask, rate=1.844, transaction_cost=1, days_to_expiry=30):
  # rate = 1.844%, maturity = 1 month using 30/360
  r = rate / 100
  t = days_to_expiry / 360

  # Initialize the result
  result = "No arbitrage opportunity"
  profit = 0
  discount_factor = math.exp(-r * t)

  # Case 1: Short call, long put, long index, and save money
  gap = call_bid - put_ask - (index_ask - x) * discount_factor
  # Since every point is worth TWD$1
  if gap >= (3 * transaction_cost):
    result = "Short call, long put, long index, and save money"
    profit = gap - 3 * transaction_cost

  # Case 2: Borrow money, long call, short put, and short index
  gap = (index_ask - x) * discount_factor - call_ask + put_bid
  # Since every point is worth TWD$1
  if gap >= (3 * transaction_cost):
    result = "Borrow money, long call, short put, and short index"
    profit = gap - 3 * transaction_cost

  return result, profit

# Check for arbitrage opportunities
strategy, profit = check_arbitrage(x, index_bid, index_ask, futures_bid, futures_ask, call_bid, call_ask, put_bid, put_ask)

# Output the result
print(f"Arbitrage Strategy: {strategy}")
print(f"Profit: ${profit:.2f} TWD")